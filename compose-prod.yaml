---
services:

  service-discovery:
    build:
      args:
        SERVICE_NAME: eureka-server
    container_name: eureka-server
    ports:
      - 8080:8761

  # service-config:
  #   build:
  #     args:
  #       SERVICE_NAME: config-server
  #   container_name: config-server
  #   depends_on:
  #     - service-discovery

  service-gateway:
    build:
      args:
        SERVICE_NAME: gateway
    container_name: gateway
    # depends_on:
    #   - service-config
    ports:
      - 80:8080

  # service-authentication:
  #   build:
  #     args:
  #       SERVICE_NAME: authentication
  #     context: .
  #     dockerfile: Dockerfile.ms
  #   container_name: authentication
  #   environment:
  #     DB_URI: ${DB_URI}/authentication
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #   depends_on:
  #     - service-gateway

  # service-customer:
  #   build:
  #     args:
  #       SERVICE_NAME: customer
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-notification:
  #   build:
  #     args:
  #       SERVICE_NAME: notification
  #   container_name: notification
  #   # environment:
  #   #   RABBITMQ_URI: ${RABBITMQ_URI}
  #   #   DB_URI: ${DB_URI}/customer
  #   #   DB_USER: ${DB_USER}
  #   #   DB_PASS: ${DB_PASS}
  #   #   SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
  #   #   TWILIO_SID: ${TWILIO_SID}
  #   #   TWILIO_TOKEN: ${TWILIO_TOKEN}
  #   #   TWILIO_NUM: ${TWILIO_NUM}
  #   depends_on:
  #     - service-gateway
  #     - postgres
  #     - rabbitmq

  # service-order:
  #   build:
  #     args:
  #       SERVICE_NAME: order
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-product:
  #   build:
  #     args:
  #       SERVICE_NAME: product
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-store:
  #   build:
  #     args:
  #       SERVICE_NAME: store
  #   container_name: store
  #   depends_on:
  #     - service-gateway
  #     - postgres

  service-customisation:
    build:
      args:
        SERVICE_NAME: customisation
    container_name: customisation
    environment:
      DB_URI: ${DB_URI}/customisation
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    depends_on:
      - service-gateway
      - postgres

  # service-payment:
  #   build:
  #     args:
  #       SERVICE_NAME: payment
  #   container_name: payment
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-subscription:
  #   build:
  #     args:
  #       SERVICE_NAME: subscription
  #   container_name: subscription
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-ticket:
  #   build:
  #     args:
  #       SERVICE_NAME: ticket
  #   container_name: ticket
  #   depends_on:
  #     - service-gateway
  #     - postgres

  postgres:
    build:
      context: ./db
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      PGDATA: /data/postgres
      TZ: ${TZ:-Europe/Paris}
      PGTZ: ${TZ:-Europe/Paris}
    ports:
      - ${POSTGRES_PORT:-5432}:5432

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    environment:
      TZ: ${TZ}
    ports:
      - 5672:5672
      - 15672:15672

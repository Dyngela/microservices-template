---
services:

  # INFRA
  service-discovery:
    build:
      args:
        SERVICE_NAME: eureka-server
    container_name: eureka-server
    ports:
      - ${EUREKA_PORT:-8080}:8761

  service-gateway:
    build:
      args:
        SERVICE_NAME: gateway
    container_name: gateway
    depends_on:
      - service-discovery
    ports:
      - ${GATEWAY_PORT:-80}:8080

  postgres:
    build:
      context: ./db
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      PGDATA: /data/postgres
      TZ: ${TZ:-Europe/Paris}
      PGTZ: ${TZ:-Europe/Paris}

  # rabbitmq:
  #   image: rabbitmq:3.9.11-management-alpine
  #   container_name: rabbitmq
  #   environment:
  #     TZ: ${TZ:-Europe/Paris}}

  # CORE
  # service-authentication:
  #   build:
  #     args:
  #       SERVICE_NAME: authentication
  #   container_name: authentication
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-customer:
  #   build:
  #     args:
  #       SERVICE_NAME: customer
  #   container_name: customer
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-notification:
  #   build:
  #     args:
  #       SERVICE_NAME: notification
  #   container_name: notification
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #     TWILIO_SID: ${TWILIO_SID}
  #     TWILIO_TOKEN: ${TWILIO_TOKEN}
  #     TWILIO_NUM: ${TWILIO_NUM}
  #     RABBITMQ_URI: ${RABBITMQ_URI}
  #   depends_on:
  #     - service-gateway
  #     - postgres
  #     - rabbitmq

  # service-order:
  #   build:
  #     args:
  #       SERVICE_NAME: order
  #   container_name: order
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #     RABBITMQ_URI: ${RABBITMQ_URI}
  #   depends_on:
  #     - service-gateway
  #     - postgres
  #     - rabbitmq

  # service-product:
  #   build:
  #     args:
  #       SERVICE_NAME: product
  #   container_name: product
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-store:
  #   build:
  #     args:
  #       SERVICE_NAME: store
  #   container_name: store
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # BACK-OFFICE
  service-customisation:
    build:
      args:
        SERVICE_NAME: customisation
    container_name: customisation
    environment:
      DB_URI: ${DB_URI}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    depends_on:
      - service-gateway
      - postgres

  # service-payment:
  #   build:
  #     args:
  #       SERVICE_NAME: payment
  #   container_name: payment
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-subscription:
  #   build:
  #     args:
  #       SERVICE_NAME: subscription
  #   container_name: subscription
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #   depends_on:
  #     - service-gateway
  #     - postgres

  # service-ticket:
  #   build:
  #     args:
  #       SERVICE_NAME: ticket
  #   container_name: ticket
  #   environment:
  #     DB_URI: ${DB_URI}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #   depends_on:
  #     - service-gateway
  #     - postgres

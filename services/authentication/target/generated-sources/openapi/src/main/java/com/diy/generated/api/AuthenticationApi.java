/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.diy.generated.api;

import com.diy.generated.model.UserDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-10-05T16:39:01.286270100+02:00[Europe/Berlin]")
@Validated
@Api(value = "Authentication", description = "the Authentication API")
public interface AuthenticationApi {

    /**
     * GET /users : Find all users
     * Get all users
     *
     * @return Successful operation (status code 200)
     *         or Invalid request (status code 404)
     */

    @ApiOperation(value = "Find all users", nickname = "findUsers", notes = "Get all users", response = UserDto.class, responseContainer = "List", tags={ "authentication", })
    @ApiResponses(value = { 

        @ApiResponse(code = 200, message = "Successful operation", response = UserDto.class, responseContainer = "List"),

        @ApiResponse(code = 404, message = "Invalid request") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/users",
        produces = { "application/json" }
    )
    ResponseEntity<List<UserDto>> findUsers();

}

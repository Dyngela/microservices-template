openapi: 3.0.1
info:
  title: MNS
  description: 'MNS ticket'
  version: 1.0.0
servers:
  - url: http://localhost:8005/com/diy/ticket/v1
tags:
  - name: ticket
    description: Everything about store's and customer's tickets
paths:
  /ticket/{ticketId}:
    get:
      tags:
        - ticket
      summary: Find a ticket by id
      description: Find a ticket by id
      operationId: findTicketById
      parameters:
        - name: ticketId
          in: path
          description: The ticket id we want to display
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Ticket'
        404:
          description: Invalid request
          content: { }
  /ticket/customer/all/{storeId}:
    get:
      tags:
        - ticket
      summary: Find all tickets customers made for a specific store
      description: Get all customers tickets for a store
      operationId: findCustomersTicketByStoreId
      parameters:
        - name: storeId
          in: path
          description: The store id we want those tickets from
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        404:
          description: Invalid request
          content: { }
  /ticket/store/all/{storeId}:
    get:
      tags:
        - ticket
      summary: Find all tickets store made
      description: Get all tickets for a store created by a store
      operationId: findStoreTicketByStoreId
      parameters:
        - name: storeId
          in: path
          description: The store id we want those tickets from
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        404:
          description: Invalid request
          content: { }

  /ticket/personal/customer/all/{customerId}:
    get:
      tags:
        - ticket
      summary: Find all tickets made by a user
      description: Get all tickets made by a user
      operationId: findTicketsByCustomerId
      parameters:
        - name: customerId
          in: path
          description: The customer id we want those tickets from
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        404:
          description: Invalid request
          content: { }

  /ticket/save:
    post:
      tags:
        - ticket
      summary: Update a ticket
      description: Update an existing ticket
      operationId: updateTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        404:
          description: Invalid request
          content: { }

    put:
      tags:
        - ticket
      summary: Create a ticket
      description: Create a ticket
      operationId: createTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        404:
          description: Invalid request
          content: { }

components:
  schemas:
    Ticket:
      type: object
      properties:
        ticketId:
          type: number
          format: int64
        title:
          type: string
        problemType:
          type: string
        description:
          type: string
        senderType:
          type: string
        state:
          type: string
        storeId:
          type: number
          format: int64
        customerId:
          type: number
          format: int64